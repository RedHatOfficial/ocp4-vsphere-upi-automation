---
- hosts: all
  gather_facts: True
  tasks:
    - name: Initial setup and checks
      import_role:
        name: setup
      tags:
      - always

    - name: Set the cache of all the download links
      import_role:
        name: cache

- hosts: localhost
  gather_facts: True
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Run all the common tasks
      import_role:
        name: common

- hosts: webservers
  gather_facts: False
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Create webserver paths for the cluster
      import_role:
        name: webserver
        tasks_from: create_cluster_dir
    - name: Copy over generated ignition files to webserver
      import_role:
        name: webserver
        tasks_from: copy_ign_files
    - name: Download the installer raw.gz file to webserver
      import_role:
        name: webserver
        tasks_from: download_raw_installer_files

- hosts: localhost
  gather_facts: False
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
    GOVC_USERNAME: "{{ vcenter.admin_username }}"
    GOVC_PASSWORD: "{{ vcenter.admin_password }}"
    GOVC_URL: "https://{{ vcenter.ip }}"
    GOVC_DATACENTER: "{{ vcenter.datacenter }}"
    GOVC_INSECURE: 1
  tasks:
    - name: Reset the vcenter.vm_power_state to poweredoff
      set_fact:
        vcenter: "{{ vcenter | combine({'vm_power_state': 'poweredoff'}, recursive=True) }}"

    - name: Echo the value of the variable vcenter.vm_power_state
      debug: var=vcenter.vm_power_state

    - name: Generate isos for all nodes
      import_role:
        name: node_isos

    - name: Create the DHCP based VMs
      vars:
        static: true
      import_role:
        name: vsphere_vm

    - name: Configure, and boot VMs
      import_role:
        name: static_ips

    - name: Run steps to finish cluster install
      import_role:
        name: finish_install
