---
- name: Initial Environment setup
  hosts: localhost
  gather_facts: True
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Initial setup and checks
      import_role:
        name: setup
      tags:
      - always

    - name: Set the cache of all the download links
      import_role:
        name: cache
      tags:
      - always

    - name: Run all the common tasks
      import_role:
        name: common
      tags:
      - always

- name: Setup webserver
  hosts: webservers
  gather_facts: False
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Set required facts
      set_fact:
        download: "{{ hostvars[groups['all'].0].download }}"
        config: "{{ hostvars[groups['all'].0].config }}"
      when:
        - config is not defined
        - download is not defined
        - inventory_hostname != "localhost"

    - name: Create webserver paths for the cluster
      import_role:
        name: webserver
        tasks_from: create_cluster_dir

    - name: Copy over generated ignition files to webserver
      import_role:
        name: webserver
        tasks_from: copy_ign_files

    - name: Download the installer raw.gz file to webserver
      import_role:
        name: webserver
        tasks_from: download_raw_installer_files

- name: Create VMs and install
  hosts: localhost
  gather_facts: False
  environment:
    PATH: "{{ playbook_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Generate isos for all nodes
      import_role:
        name: node_isos
      when: skip_iso is not defined

    - name: Create, Configure and boot the VMs
      environment:
        GOVC_USERNAME: "{{ vcenter.username }}"
        GOVC_PASSWORD: "{{ vcenter.password }}"
        GOVC_URL: "https://{{ vcenter.ip }}"
        GOVC_DATACENTER: "{{ vcenter.datacenter }}"
        GOVC_INSECURE: 1
      vars:
        iso: true
        skip_ova: true
      import_role:
        name: vsphere_vm

    - name: Run steps to finish cluster install
      import_role:
        name: finish_install
