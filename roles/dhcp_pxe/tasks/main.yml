  - name: Create bootstrap VM from the template
    vmware_guest:
      hostname: "{{ vcenter.ip }}"
      username: "{{ vcenter.service_account_username }}"
      password: "{{ vcenter.service_account_password }}"
      datacenter: "{{ vcenter.datacenter }}"
      guest_id: "rhel7_64Guest"
      validate_certs: no
      folder: "{{ vcenter.folder_absolute_path }}"
      name: "{{ item.name }}"
      state: "{{ vcenter.vm_power_state }}"
      disk:
      - size_gb: 120
        type: thin
        datastore: "{{ vcenter.datastore }}"
      hardware:
        memory_mb: 16384
        num_cpus: 4
        memory_reservation_lock: True
      networks:
      - name: "{{ vcenter.network }}"
        mac: "{{ item.macaddr }}"
      wait_for_ip_address: no
    loop: "{{ bootstrap_vms }}"
  - name: Create master VMs from the template
    vmware_guest:
      hostname: "{{ vcenter.ip }}"
      username: "{{ vcenter.service_account_username }}"
      password: "{{ vcenter.service_account_password }}"
      datacenter: "{{ vcenter.datacenter }}"
      guest_id: "rhel7_64Guest"
      validate_certs: no
      folder: "{{ vcenter.folder_absolute_path }}"
      name: "{{ item.name }}"
      state: "{{ vcenter.vm_power_state }}"
      disk:
      - size_gb: 120
        type: thin
        datastore: "{{ vcenter.datastore }}"
      hardware:
        memory_mb: 16384
        num_cpus: 4
        memory_reservation_lock: True
      networks:
      - name: "{{ vcenter.network }}"
        mac: "{{ item.macaddr }}"
      wait_for_ip_address: no
    loop: "{{ master_vms }}"

  - name: Create worker VMs from the template
    vmware_guest:
      hostname: "{{ vcenter.ip }}"
      username: "{{ vcenter.service_account_username }}"
      password: "{{ vcenter.service_account_password }}"
      datacenter: "{{ vcenter.datacenter }}"
      guest_id: "rhel7_64Guest"
      validate_certs: no
      folder: "{{ vcenter.folder_absolute_path }}"
      name: "{{ item.name }}"
      state: "{{ vcenter.vm_power_state }}"
      disk:
      - size_gb: 120
        type: thin
        datastore: "{{ vcenter.datastore }}"
      hardware:
        memory_mb: 16384
        num_cpus: 4
        memory_reservation_lock: True
      networks:
      - name: "{{ vcenter.network }}"
        mac: "{{ item.macaddr }}"
      wait_for_ip_address: no
    loop: "{{ worker_vms }}"

  - name: Update VM options on the template
    command: "govc vm.change -vm {{ vcenter.folder_absolute_path }}/{{ item.name }} -e=disk.EnableUUID=TRUE"
    loop: "{{ bootstrap_vms + master_vms + worker_vms }}"