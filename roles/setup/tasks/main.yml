- fail:
    msg: "Bailing out: this play requires 'cluster'"
  when: cluster is not defined

- name: Check for cluster file
  stat:
    path: "{{ clusters_folder }}/{{ cluster }}.yaml"
  register: cluster_file

- fail:
    msg: "Bailing out: cluster file is not found in the '{{ clusters_folder }}' folder"
  when: not cluster_file.stat.exists

- include_vars: "{{ clusters_folder }}/{{ cluster }}.yaml"

- name: Update config.cluster_base_version var if using latest
  vars:
    cbv: "{{ config.cluster_version | regex_search('.*-.*') | split('-') | last }}"
  set_fact:
    config: "{{ config | combine( { 'cluster_base_version':  cbv }, recursive=True, list_merge='keep' ) }}"
  when: config.cluster_version | regex_search('latest') == 'latest'

- name: Update config.cluster_base_version var if using specific version
  vars:
    vers_parts: "{{ config.cluster_version | split('.') }}"
    cbv: "{{ vers_parts[0] + '.' + vers_parts[1] }}"
  set_fact:
    config: "{{ config | combine( { 'cluster_base_version': cbv  }, recursive=True, list_merge='keep' ) }}"
  when: config.cluster_version | regex_search('latest') != 'latest'

- name: Fetch the content of the release.txt from the clients downloads page
  uri:
    url: "{{ download.clients_url }}/release.txt"
    return_content: yes
  register: release_content

- name:  Update config.cluster_base_version release_version which will be used later
  set_fact:
    config: "{{ config | combine({ item.key : item.value }, recursive=True) }}"
  when: inventory_hostname == "localhost"
  loop:
    - { key: "release_version", value: "{{ release_content.content | regex_search(config.cluster_base_version + '.[0-9]+') }}" }

- name: Update the registry.product_release_version var if registry is enabled
  set_fact:
    registry: "{{ registry | combine( { 'product_release_version': config.release_version + '-x86_64'  }, recursive=True, list_merge='keep' ) }}"
  when: registry.enabled | bool

- name: Update download.dependencies_url
  set_fact:
    download: "{{ download | combine( {'dependencies_url': 'https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/' + config.cluster_base_version + '/latest'} ) }}"

- name: Set bootstrap list
  set_fact:
    bootstrap_vms: "{{ bootstrap_vms|default([]) + [item] }}"
  when: item.type == 'bootstrap'
  loop: "{{ nodes }}"
  loop_control:
    label: "{{ item.name }}"

- name: Set master list
  set_fact:
    master_vms: "{{ master_vms|default([]) + [item] }}"
  when: item.type == 'master'
  loop: "{{ nodes }}"
  loop_control:
    label: "{{ item.name }}"

- name: Set worker list
  set_fact:
    worker_vms: "{{ worker_vms|default([]) + [item] }}"
  when: item.type == 'worker'
  loop: "{{ nodes }}"
  loop_control:
    label: "{{ item.name }}"
