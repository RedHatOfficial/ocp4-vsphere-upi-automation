 - name: Wait for bootstrap to complete prior to starting workers
   command: "{{ playbook_dir }}/bin/openshift-install --dir={{ playbook_dir }}/install-dir wait-for bootstrap-complete --log-level debug" # noqa 301
   retries: 180
   delay: 10
   register: result_bootstrap
   until: result_bootstrap.rc == 0

 - name: Boot the worker vms
   vmware_guest:
     hostname: "{{ vcenter.ip }}"
     username: "{{ vcenter.service_account_username }}"
     password: "{{ vcenter.service_account_password }}"
     datacenter: "{{ vcenter.datacenter }}"
     validate_certs: no
     folder: "{{ vcenter.folder_absolute_path }}"
     name: "{{ item.name }}"
     state: "{{ vcenter.vm_power_state }}"
   loop: "{{ worker_vms }}"
    
 - name: Delete Bootstrap VM
   command: "{{ playbook_dir }}/bin/govc vm.destroy {{ item.name }}"  # noqa 301
   loop: "{{ bootstrap_vms }}"
   when: result_bootstrap.rc == 0

 - name: Wait for node-bootstraper csrs to approve
   shell: "{{ playbook_dir }}/bin/oc get csr -o json --kubeconfig={{ playbook_dir }}/install-dir/auth/kubeconfig | jq -r '.items[] | select(.status == {}) | .metadata.name'" # noqa 301 306
   register: result_csr
   until: result_csr['stdout_lines']|count == worker_vms|count
   retries: 60
   delay: 60

 - name: Approve the csrs
   command: "{{ playbook_dir }}/bin/oc adm certificate approve {{ item }} --kubeconfig={{ playbook_dir }}/install-dir/auth/kubeconfig" # noqa 301
   loop: "{{ result_csr['stdout_lines'] }}"

 - name: Wait for system:node csrs to approve
   shell: "{{ playbook_dir }}/bin/oc get csr -o json --kubeconfig={{ playbook_dir }}/install-dir/auth/kubeconfig | jq -r '.items[] | select(.status == {}) | .metadata.name'"  # noqa 301 306
   register: result_system
   until: result_system['stdout_lines']|count == worker_vms|count
   retries: 60
   delay: 60

 - name: Approve the csrs
   command: "{{ playbook_dir }}/bin/oc adm certificate approve {{ item }} --kubeconfig={{ playbook_dir }}/install-dir/auth/kubeconfig" # noqa 301
   loop: "{{ result_system['stdout_lines'] }}"

 - name: Wait for install complete
   command: openshift-install wait-for install-complete --dir={{ playbook_dir }}/install-dir --log-level debug # noqa 301
   register: result_complete

 - name: Output results from openshift-install wait-for install-complete
   debug:
     msg: "{{ result_complete.stderr | regex_findall('level=info.*') | list }}"
