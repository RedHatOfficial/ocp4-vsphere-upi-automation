---
    - name: Install the necessary linux packages which will be needed later in the ansible run
      yum:
        name:
          - patch
          - gzip
          - python-pip
          - genisoimage
          - jq
        use_backend: auto 
      become: true
  
    - name: Install python3-pyvmomi
      pip: 
        name: pyvmomi
      become: true
  
    - name: Create ~/.ssh directory if it does not exist
      file:
        path: ~/.ssh
        state: directory
        mode: '0755'
  
    - name: Generate a SSH key-pair
      openssh_keypair:
        path: ~/.ssh/ocp4
        force: false
  
    - name: Clean up existing bin, install-dir and downloads folders
      file: 
        path: "{{ playbook_dir }}/{{ item }}"
        state: absent
      with_items: ["bin", "install-dir", "downloads"]
      when: clean is defined
  
    - name: Must always clean install-dir
      file:
        path: "{{ playbook_dir }}/{{ item }}"
        state: absent
      with_items: ["install-dir"]
      when: clean is not defined
  
    - name: Create bin, install-dir and downloads folders
      file:
        path: "{{ playbook_dir }}/{{ item }}"
        state: directory
        mode: '0755'
      with_items: ["bin", "downloads","downloads/ISOs", "install-dir"]  
  
    - name: Download the oc client binary
      get_url:
        url: "{{ download.openshiftClient }}"
        dest: "{{ playbook_dir }}/downloads/oc_client.tar.gz"
        validate_certs: no
      register: oc_client_download
  
    - name: Download the openshift-install binary
      get_url:
        url: "{{ download.openshiftInstall }}"
        dest: "{{ playbook_dir }}/downloads/openshift_install.tar.gz"
        validate_certs: no
      register: openshift_install_download
  
    - name: Unarchive oc client
      unarchive:
        src: "{{ playbook_dir }}/downloads/oc_client.tar.gz"
        dest: "{{ playbook_dir }}/bin"
      when: oc_client_download is changed
  
    - name: Unarchive openshift-install 
      unarchive:
        src: "{{ playbook_dir }}/downloads/openshift_install.tar.gz"
        dest: "{{ playbook_dir }}/bin"
      when: openshift_install_download is changed
  
    - name: Download govc
      get_url:
        url: "{{ download.govc}}"
        dest: "{{ playbook_dir }}/downloads/govc.gz"
        validate_certs: no    
  
    - name: Unarchive govc
      shell: gzip -dc "{{ playbook_dir }}/downloads/govc.gz" > "{{ playbook_dir }}/bin/govc"
  
    - name: Make govc executable
      file:
        path: "{{ playbook_dir }}/bin/govc"
        mode: '775'
  
    - name: Copy install-config.yaml file into install-dir
      template:
        src: "{{ playbook_dir }}/roles/common/templates/install-config.yaml.j2"
        dest: "{{ playbook_dir }}/install-dir/install-config.yaml"

    - name: Run steps pertaining to proxy, if any
      include: handle_proxy.yml
      when: 
        - proxy is defined
        - proxy.enabled == true

    - name: Backup the install-config.yaml file
      copy:
        src: "{{ playbook_dir }}/install-dir/install-config.yaml"
        dest: "{{ playbook_dir }}/install-dir/install-config.yaml.orig"
      when: (registry is not defined) or (registry.enabled is not defined) or (registry.enabled == false)
 
